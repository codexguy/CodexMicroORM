//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodexMicroORM.WPFDemo.EFObjectModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CodexMicroORMTestEntities : DbContext
    {
        public CodexMicroORMTestEntities()
            : base("name=CodexMicroORMTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<Phone> Phones { get; set; }
        public virtual DbSet<PhoneType> PhoneTypes { get; set; }
    
        public virtual ObjectResult<up_Person_ByKey_Result> up_Person_ByKey(ObjectParameter retVal, ObjectParameter msg, Nullable<int> personID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Person_ByKey_Result>("up_Person_ByKey", retVal, msg, personIDParameter);
        }
    
        public virtual ObjectResult<up_Person_ByParentPersonID_Result> up_Person_ByParentPersonID(ObjectParameter retVal, ObjectParameter msg, Nullable<int> parentPersonID)
        {
            var parentPersonIDParameter = parentPersonID.HasValue ?
                new ObjectParameter("ParentPersonID", parentPersonID) :
                new ObjectParameter("ParentPersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Person_ByParentPersonID_Result>("up_Person_ByParentPersonID", retVal, msg, parentPersonIDParameter);
        }
    
        public virtual int up_Person_d(Nullable<int> personID, string lastUpdatedBy, Nullable<System.DateTime> lastUpdatedDate)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Person_d", personIDParameter, lastUpdatedByParameter, lastUpdatedDateParameter);
        }
    
        public virtual ObjectResult<up_Person_ForList_Result> up_Person_ForList(ObjectParameter retVal, ObjectParameter msg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Person_ForList_Result>("up_Person_ForList", retVal, msg);
        }
    
        public virtual int up_Person_i(ObjectParameter personID, string name, Nullable<int> age, Nullable<int> parentPersonID, string gender, string lastUpdatedBy, ObjectParameter lastUpdatedDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var parentPersonIDParameter = parentPersonID.HasValue ?
                new ObjectParameter("ParentPersonID", parentPersonID) :
                new ObjectParameter("ParentPersonID", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Person_i", personID, nameParameter, ageParameter, parentPersonIDParameter, genderParameter, lastUpdatedByParameter, lastUpdatedDate);
        }
    
        public virtual ObjectResult<up_Person_SummaryForParents_Result> up_Person_SummaryForParents(ObjectParameter retVal, ObjectParameter msg, Nullable<int> minimumAge)
        {
            var minimumAgeParameter = minimumAge.HasValue ?
                new ObjectParameter("MinimumAge", minimumAge) :
                new ObjectParameter("MinimumAge", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Person_SummaryForParents_Result>("up_Person_SummaryForParents", retVal, msg, minimumAgeParameter);
        }
    
        public virtual int up_Person_u(Nullable<int> personID, string name, Nullable<int> age, Nullable<int> parentPersonID, string gender, string lastUpdatedBy, ObjectParameter lastUpdatedDate)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var parentPersonIDParameter = parentPersonID.HasValue ?
                new ObjectParameter("ParentPersonID", parentPersonID) :
                new ObjectParameter("ParentPersonID", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Person_u", personIDParameter, nameParameter, ageParameter, parentPersonIDParameter, genderParameter, lastUpdatedByParameter, lastUpdatedDate);
        }
    
        public virtual ObjectResult<up_Phone_AllForFamily_Result> up_Phone_AllForFamily(ObjectParameter retVal, ObjectParameter msg, Nullable<int> personID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Phone_AllForFamily_Result>("up_Phone_AllForFamily", retVal, msg, personIDParameter);
        }
    
        public virtual ObjectResult<up_Phone_ByKey_Result> up_Phone_ByKey(ObjectParameter retVal, ObjectParameter msg, Nullable<int> phoneID)
        {
            var phoneIDParameter = phoneID.HasValue ?
                new ObjectParameter("PhoneID", phoneID) :
                new ObjectParameter("PhoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Phone_ByKey_Result>("up_Phone_ByKey", retVal, msg, phoneIDParameter);
        }
    
        public virtual ObjectResult<up_Phone_ByPersonID_Result> up_Phone_ByPersonID(ObjectParameter retVal, ObjectParameter msg, Nullable<int> personID, Nullable<int> phoneTypeID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var phoneTypeIDParameter = phoneTypeID.HasValue ?
                new ObjectParameter("PhoneTypeID", phoneTypeID) :
                new ObjectParameter("PhoneTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Phone_ByPersonID_Result>("up_Phone_ByPersonID", retVal, msg, personIDParameter, phoneTypeIDParameter);
        }
    
        public virtual int up_Phone_d(Nullable<int> phoneID, string lastUpdatedBy)
        {
            var phoneIDParameter = phoneID.HasValue ?
                new ObjectParameter("PhoneID", phoneID) :
                new ObjectParameter("PhoneID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Phone_d", phoneIDParameter, lastUpdatedByParameter);
        }
    
        public virtual ObjectResult<up_Phone_ForList_Result> up_Phone_ForList(ObjectParameter retVal, ObjectParameter msg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_Phone_ForList_Result>("up_Phone_ForList", retVal, msg);
        }
    
        public virtual int up_Phone_i(ObjectParameter phoneID, Nullable<int> phoneTypeID, string number, Nullable<int> personID, string lastUpdatedBy, ObjectParameter lastUpdatedDate)
        {
            var phoneTypeIDParameter = phoneTypeID.HasValue ?
                new ObjectParameter("PhoneTypeID", phoneTypeID) :
                new ObjectParameter("PhoneTypeID", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Phone_i", phoneID, phoneTypeIDParameter, numberParameter, personIDParameter, lastUpdatedByParameter, lastUpdatedDate);
        }
    
        public virtual int up_Phone_u(Nullable<int> phoneID, Nullable<int> phoneTypeID, string number, Nullable<int> personID, string lastUpdatedBy, ObjectParameter lastUpdatedDate)
        {
            var phoneIDParameter = phoneID.HasValue ?
                new ObjectParameter("PhoneID", phoneID) :
                new ObjectParameter("PhoneID", typeof(int));
    
            var phoneTypeIDParameter = phoneTypeID.HasValue ?
                new ObjectParameter("PhoneTypeID", phoneTypeID) :
                new ObjectParameter("PhoneTypeID", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_Phone_u", phoneIDParameter, phoneTypeIDParameter, numberParameter, personIDParameter, lastUpdatedByParameter, lastUpdatedDate);
        }
    
        public virtual ObjectResult<up_PhoneType_ByKey_Result> up_PhoneType_ByKey(ObjectParameter retVal, ObjectParameter msg, Nullable<int> phoneTypeID)
        {
            var phoneTypeIDParameter = phoneTypeID.HasValue ?
                new ObjectParameter("PhoneTypeID", phoneTypeID) :
                new ObjectParameter("PhoneTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_PhoneType_ByKey_Result>("up_PhoneType_ByKey", retVal, msg, phoneTypeIDParameter);
        }
    
        public virtual int up_PhoneType_d(ObjectParameter retVal, ObjectParameter msg, Nullable<int> phoneTypeID, string lastUpdatedBy)
        {
            var phoneTypeIDParameter = phoneTypeID.HasValue ?
                new ObjectParameter("PhoneTypeID", phoneTypeID) :
                new ObjectParameter("PhoneTypeID", typeof(int));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_PhoneType_d", retVal, msg, phoneTypeIDParameter, lastUpdatedByParameter);
        }
    
        public virtual ObjectResult<up_PhoneType_ForList_Result> up_PhoneType_ForList(ObjectParameter retVal, ObjectParameter msg)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<up_PhoneType_ForList_Result>("up_PhoneType_ForList", retVal, msg);
        }
    
        public virtual int up_PhoneType_i(ObjectParameter retVal, ObjectParameter msg, ObjectParameter phoneTypeID, string phoneTypeDesc, string lastUpdatedBy, ObjectParameter lastUpdatedDate)
        {
            var phoneTypeDescParameter = phoneTypeDesc != null ?
                new ObjectParameter("PhoneTypeDesc", phoneTypeDesc) :
                new ObjectParameter("PhoneTypeDesc", typeof(string));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_PhoneType_i", retVal, msg, phoneTypeID, phoneTypeDescParameter, lastUpdatedByParameter, lastUpdatedDate);
        }
    
        public virtual int up_PhoneType_u(ObjectParameter retVal, ObjectParameter msg, Nullable<int> phoneTypeID, string phoneTypeDesc, string lastUpdatedBy, ObjectParameter lastUpdatedDate)
        {
            var phoneTypeIDParameter = phoneTypeID.HasValue ?
                new ObjectParameter("PhoneTypeID", phoneTypeID) :
                new ObjectParameter("PhoneTypeID", typeof(int));
    
            var phoneTypeDescParameter = phoneTypeDesc != null ?
                new ObjectParameter("PhoneTypeDesc", phoneTypeDesc) :
                new ObjectParameter("PhoneTypeDesc", typeof(string));
    
            var lastUpdatedByParameter = lastUpdatedBy != null ?
                new ObjectParameter("LastUpdatedBy", lastUpdatedBy) :
                new ObjectParameter("LastUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("up_PhoneType_u", retVal, msg, phoneTypeIDParameter, phoneTypeDescParameter, lastUpdatedByParameter, lastUpdatedDate);
        }
    }
}
